<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UnexpectedToken" xml:space="preserve">
    <value>Неочікуваний токен: {Token}</value>
    <comment/>
  </data>
  <data name="UnknownPrefixFunction" xml:space="preserve">
    <value>Невідома префіксна функція: {FunctionName}</value>
    <comment/>
  </data>
  <data name="UnknownInfixFunction" xml:space="preserve">
    <value>Невідомий оператор або інфіксна функція: {FunctionName}</value>
    <comment/>
  </data>
  <data name="UnexpectedEOE" xml:space="preserve">
    <value>Неочікуваний кінець виразу</value>
    <comment/>
  </data>
  <data name="UnexpectedValue" xml:space="preserve">
    <value>Очікувалося {Type}{ExpectedValue}, знайдено {RealValue}</value>
    <comment/>
  </data>
  <data name="UnexpectedTokenEOE" xml:space="preserve">
    <value>Неочікуваний токен у кінці виразу: {Token}</value>
    <comment/>
  </data>
  <data name="UnexpectedCharacter" xml:space="preserve">
    <value>Неочікуваний символ {Character} на позиції {Position}</value>
    <comment/>
  </data>
  <data name="CannotDivideBy0" xml:space="preserve">
    <value>Не можна ділити на 0</value>
    <comment/>
  </data>
  <data name="ExpectsExactlyNArguments" xml:space="preserve">
    <value>Функція {FunctionName} очікує рівно {Count} аргументів</value>
    <comment/>
  </data>
  <data name="ExpectsAtLeastNNumberArguments" xml:space="preserve">
    <value>Функція {FunctionName} очікує хоча б {Count} числових аргументів</value>
    <comment/>
  </data>
  <data name="CannotConvertTo" xml:space="preserve">
    <value>Не можна конвертувати {FromType} у {ToType} </value>
    <comment/>
  </data>
  <data name="OperatorDefinedOnlyForNumbers" xml:space="preserve">
    <value>Оператор {Operator} визначений лише для чисел</value>
    <comment/>
  </data>
  <data name="UnaryOperatorDefinedOnlyForNumbers" xml:space="preserve">
    <value>Оператор унарний {Operator} визначений лише для чисел</value>
    <comment/>
  </data>
  <data name="OK" xml:space="preserve">
    <value>Добре</value>
    <comment/>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Помилка</value>
    <comment/>
  </data>
  <data name="SavingResult" xml:space="preserve">
    <value>Результат збереження</value>
    <comment/>
  </data>
  <data name="EmptyFile" xml:space="preserve">
    <value>Файл пустий</value>
    <comment/>
  </data>
  <data name="InvalidFileHeader" xml:space="preserve">
    <value>Заголовок файлу невалідний</value>
    <comment/>
  </data>
  <data name="FileSavedSuccessfully" xml:space="preserve">
    <value>Файл успішно збережено у локації {Path}</value>
    <comment/>
  </data>
  <data name="FileSavingError" xml:space="preserve">
    <value>Файл не вдалося зберегти. Помилка: {Error}</value>
    <comment/>
  </data>
  <data name="EnterValidNumbers" xml:space="preserve">
    <value>Будь ласка, введіть валідні числа</value>
    <comment/>
  </data>
  <data name="DimensionsMustBeGreaterThan0" xml:space="preserve">
    <value>Розміри таблиці повинні бути більші за 0</value>
    <comment/>
  </data>
  <data name="CreatingGrid" xml:space="preserve">
    <value>Створюється таблиця {Columns}x{Rows}...</value>
    <comment/>
  </data>
  <data name="GridCreated" xml:space="preserve">
    <value>Таблицю {Columns}x{Rows} створено за {TimeMs}мс</value>
    <comment/>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Відкрити файл</value>
    <comment/>
  </data>
  <data name="SaveFile" xml:space="preserve">
    <value>Зберегти файл</value>
    <comment/>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Головна сторінка</value>
    <comment/>
  </data>
  <data name="CreateNewSpreadsheet" xml:space="preserve">
    <value>Створити нову таблицю</value>
    <comment/>
  </data>
  <data name="EnterGridDimensions" xml:space="preserve">
    <value>Введіть розміри таблиці:</value>
    <comment/>
  </data>
  <data name="EnterColumns" xml:space="preserve">
    <value>Стовпчики:</value>
    <comment/>
  </data>
  <data name="EnterRows" xml:space="preserve">
    <value>Рядки:</value>
    <comment/>
  </data>
  <data name="GenerateGrid" xml:space="preserve">
    <value>Створити таблицю</value>
    <comment/>
  </data>
  <data name="RecentFiles" xml:space="preserve">
    <value>Нещодавні файли</value>
    <comment/>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Очистити</value>
    <comment/>
  </data>
  <data name="EnterValuePlaceholder" xml:space="preserve">
    <value>Введіть значення або формулу (наприклад, =A1+B2)</value>
    <comment/>
  </data>
  <data name="HelpPage" xml:space="preserve">
    <value>Допомога</value>
    <comment/>
  </data>
  <data name="NoRecentFiles" xml:space="preserve">
    <value>Немає нещодавніх файлів...</value>
    <comment/>
  </data>
  <data name="ShowFormulasInsteadOfValues" xml:space="preserve">
    <value>Показувати формули замість значень</value>
    <comment/>
  </data>
  <data name="PickTable" xml:space="preserve">
    <value>Оберіть таблицю</value>
    <comment/>
  </data>
  <data name="InvalidCellNamesInRange" xml:space="preserve">
    <value>Невалідні назви клітин у заданому діапазоні</value>
    <comment/>
  </data>
  <data name="ColumnAndRowIndicesMustBeNonNegative" xml:space="preserve">
    <value>Індекси стовпця та рядка мають бути невід'ємними</value>
    <comment/>
  </data>
  <data name="CellNameCannotBeEmpty" xml:space="preserve">
    <value>Назва клітинки не може бути порожньою</value>
    <comment/>
  </data>
  <data name="InvalidCellNameFormat" xml:space="preserve">
    <value>Невалідний формат назви клітинки: {CellName}</value>
    <comment/>
  </data>
  <data name="ColumnIndexMustBeNonNegative" xml:space="preserve">
    <value>Індекс стовпця має бути невід'ємним</value>
    <comment/>
  </data>
  <data name="RowIndexMustBeNonNegative" xml:space="preserve">
    <value>Індекс рядка має бути невід'ємним</value>
    <comment/>
  </data>
  <data name="ColumnNameCannotBeEmpty" xml:space="preserve">
    <value>Назва стовпця не може бути порожньою</value>
    <comment/>
  </data>
  <data name="RowNameCannotBeEmpty" xml:space="preserve">
    <value>Назва рядка не може бути порожньою</value>
    <comment/>
  </data>
  <data name="InvalidCharacterInColumnName" xml:space="preserve">
    <value>Невалідний символ у назві стовпця: {Character}</value>
    <comment/>
  </data>
  <data name="InvalidRowName" xml:space="preserve">
    <value>Невалідна назва рядка: {RowName}</value>
    <comment/>
  </data>
  <data name="RangeMustBeInFormat" xml:space="preserve">
    <value>Діапазон має бути у форматі 'Початкова клітина:Кінцева клітина'</value>
    <comment/>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Інформація</value>
    <comment/>
  </data>
  <data name="InfoText" xml:space="preserve">
    <value>Це ExcelClone - програма, яка може обраховувати складні вирази, залежні від інших виразів, у табличному вигляді.</value>
    <comment/>
  </data>
  <data name="Usage" xml:space="preserve">
    <value>Використання</value>
    <comment/>
  </data>
  <data name="UsageText" xml:space="preserve">
    <value>Програма має 2 типи виразів - константні та формульні. Формульні вирази обов'язково починаються зі знаку = (наприклад, =1+2), константними ж є всі інші типи виразів.&#13;&#10;Поради стосовно введення даних у формульних виразах:&#13;&#10;1. Назви клітин необхідно вводити у верхньому регістрі, наприклад =AA12&#13;&#10;2. Назви функцій необхідно вводити у нижньому регістрі, наприклад =sum(1,3)&#13;&#10;3. Перед та після назви інфіксної функції необхідно ставити пробіли, наприклад =5 mod 2&#13;&#10;Формули можуть повертати числові та логічні значення (логічні значення позначаються TRUE чи FALSE та не можуть використовуватися у операціях над числовими значеннями), а також помилки (#REF - помилка посилання на неіснуючу клітинку, #ERROR - будь-яка інша помилка).</value>
    <comment/>
  </data>
  <data name="Functions" xml:space="preserve">
    <value>Функції</value>
    <comment/>
  </data>
  <data name="FunctionsText" xml:space="preserve">
    <value>Дана програма підтримує два види функцій, які поділяються за типом нотації - інфіксні та префіксні.&#13;&#10;Інфіксні функції додатково поділяються за типом асоціативності на лівоасоціативні та правоасоціативні.</value>
    <comment/>
  </data>
  <data name="InfixFunctions" xml:space="preserve">
    <value>Інфіксні функції</value>
    <comment/>
  </data>
  <data name="InfixFunctionsText" xml:space="preserve">
    <value>До інфіксних функцій відносимо функції вигляду =x func y, де func - позначення функції, x та y - деякі змінні.&#13;&#10;Список лівоасоціативних інфіксних функцій:&#13;&#10;1. Базові оператори: +, -, *, /&#13;&#10;2. Оператори порівняння: &gt;, &lt;, =, &lt;=, &gt;=, &lt;&gt;&#13;&#10;3. Функції: mod, div, and, or, eqv&#13;&#10;Список правоасоціативних інфіксних функцій:&#13;&#10;Базові оператори: ^</value>
    <comment/>
  </data>
  <data name="PrefixFunctions" xml:space="preserve">
    <value>Префіксні функції</value>
    <comment/>
  </data>
  <data name="PrefixFunctionsText" xml:space="preserve">
    <value>До префіксних функцій відносимо функції вигляду =func(x1,x2,...,xN), N &gt;= 1, де func - позначення функції, x1, x2, ..., xN - деякі змінні.&#13;&#10;Дані функції поділяємо за кількістю аргументів, які вони приймають:&#13;&#10;1: inc, dec, not (=not(0))&#13;&#10;2: min, max (=min(2,3))&#13;&#10;Хоча б 1: mmin, mmax (=mmin(1,2,3,4), =mmax1))&#13;&#10;Будь-яку: sum (=sum(1,2,3,4), =sum(1), =sum())</value>
    <comment/>
  </data>
  <data name="ActionConfirmation" xml:space="preserve">
    <value>Підтвердження дії</value>
    <comment/>
  </data>
  <data name="CurrentDataWillBeLost" xml:space="preserve">
    <value>При виконанні даної дії поточні дані будуть втрачені. Продовжити?</value>
    <comment/>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Так</value>
    <comment/>
  </data>
  <data name="No" xml:space="preserve">
    <value>Ні</value>
    <comment/>
  </data>
  <data name="CircularDependencyDetected" xml:space="preserve">
    <value>Виявлено циклічну залежність у клітинці {CellName}</value>
    <comment/>
  </data>
  <data name="InvalidErrorTypeProvided" xml:space="preserve">
    <value>Задано невалідний тип помилки: {ErrorType}</value>
    <comment/>
  </data>
</root>